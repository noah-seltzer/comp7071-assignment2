@model IEnumerable<Comp7071_A2.Areas.ManageHumanResourcesAndPayroll.Models.HRSchedule>
@using Comp7071_A2.Areas.ManageHumanResourcesAndPayroll.Models

@{



    ViewData["Title"] = "Index";

}
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
<script>
    var model = @Html.Raw(Json.Serialize(@Model))

    var shifts = []
    model.forEach((m,i)=> {
        m.shifts.forEach(s => {
            shifts.push({
                title: m.name,
                id: s.id,
                start: s.start_Time,
                startStr: s.start_Time,
                end:s.end_Time,
                endStr:s.end_Time,
            })
        })
    })

    document.addEventListener('DOMContentLoaded', function() {
      var calendarEl = document.getElementById('calendar');
      var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        selectable: false,
        events: shifts
      });
      calendar.render();
    });

</script>


<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Start_Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.End_Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hours_Scheduled)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recurrance)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Start_Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.End_Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hours_Scheduled)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Recurrance)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}       
    </tbody>
</table>
<div id="calendar"></div>