@model Invoice

@{
    ViewData["Title"] = "Invoice Details";
}

<div class="page-header">
    <h1><i class="bi bi-receipt"></i> Invoice Details</h1>
</div>

<div class="card mb-4">
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">
                Invoice #
            </dt>
            <dd class="col-sm-9">
                @Model.Id.ToString().Substring(0, 8).ToUpper()
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.StartDate)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.StartDate)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.EndDate)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.EndDate)
            </dd>
            <dt class="col-sm-3">
                Customer
            </dt>
            <dd class="col-sm-9">
                @(Model.Customer?.Name ?? "N/A")
            </dd>
            <dt class="col-sm-3">
                Total
            </dt>
            <dd class="col-sm-9">
                @(Model.Lines != null ? Model.Lines.Sum(l => l.Amount).ToString("C") : "$0.00")
            </dd>
        </dl>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header">
        <h4 class="mb-0"><i class="bi bi-list-ul"></i> Invoice Lines</h4>
    </div>
    <div class="card-body">
        @if (Model.Lines != null && Model.Lines.Any())
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Service</th>
                        <th>Date/Time</th>
                        <th>Duration</th>
                        <th>Rate</th>
                        <th>Calculation</th>
                        <th class="text-end">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var line in Model.Lines)
                    {
                        // Parse the description to extract service name and times
                        var parts = line.Description.Split(" - ");
                        var serviceName = parts[0];
                        var timeRange = parts.Length > 1 ? parts[1] : "";
                        
                        // Calculate duration in hours (for display)
                        var durationHours = line.Amount / line.UnitPrice;
                        
                        <tr>
                            <td>@serviceName</td>
                            <td>@timeRange</td>
                            <td>@durationHours.ToString("F2") hours</td>
                            <td>$@line.UnitPrice.ToString("F2")/hour</td>
                            <td>$@line.UnitPrice.ToString("F2") Ã— @durationHours.ToString("F2") hours</td>
                            <td class="text-end">$@line.Amount.ToString("F2")</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th colspan="5" class="text-end">Total:</th>
                        <th class="text-end">$@Model.Lines.Sum(l => l.Amount).ToString("F2")</th>
                    </tr>
                </tfoot>
            </table>
        }
        else
        {
            <p class="text-muted">No invoice lines.</p>
        }
    </div>
</div>

<div class="mt-3">
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">
        <i class="bi bi-pencil"></i> Edit
    </a>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Back to List
    </a>
</div> 